//=================================================================================================
// ------ Building the VariationalFormulations.edp file ------ 
//=================================================================================================

write
<<"                                                                                                \n"
<<"//==============================================================================                \n"
<<"// -------Variation formulation linear elasticity-------                                        \n"
<<"//==============================================================================                \n"
<<"                                                                                                \n"
<<"                                                                                                \n"
<<"varf elast(def(u),def(v)) =                                                                     \n"
<<"                                                                                                \n";

if(fastmethod)write
<<"    //--------------------------------------------------------------------------                \n"
<<"    //  $+int_{\\Omega}(\\lambda:\\nabla(u).\\nabla(v))$                                        \n"
<<"    //  $+int_{\\Omega}(2\\mu(\\epsilon(u):\\epsilon(v)))$                                      \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"      intN(Th,qforder=3)(                                                                       \n"
<<"                     lambda*divergence(u)*divergence(v)                                         \n"
<<"                   + 2.*mu*( epsilon(u)'*epsilon(v) )                                           \n";

if(!fastmethod)write
<<"    //--------------------------------------------------------------------------                \n"
<<"    //  $+int_{\\Omega}(\\epsilon(u):\\mathbbm(E):\\epsilon(v))$                                \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"      intN(Th,qforder=3)(                                                                       \n"
<<"                     epsilon(u)'*Mt*epsilon(v)                                                  \n";

write
<<"                     )                                                                          \n";

if(bodyforce)write
<<"                                                                                                \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"    //  $+int_{\\Omega}(f.v)$                                                                   \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"     + intN(Th,qforder=2)(BF'*def(v))                                                           \n";


if(tractionconditions>=1)if(spc==2)
for(int i=0; i<tractionconditions; i++)
write
<<"                                                                                                \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"    //  $+int_{\\partial\\Omega_N}(T.v)$                                                        \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"     + intN1(Th,Tlabel["<<i<<"],qforder=2)(T(tx"<<i<<",ty"<<i<<")'*def(v))                      \n";

if(tractionconditions>=1)if(spc==3)
for(int i=0; i<tractionconditions; i++)
write
<<"                                                                                                \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"    //  $+int_{\\partial\\Omega_N}(T.v)$                                                        \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"      + intN1(Th,Tlabel["<<i<<"],qforder=2)(T(tx"<<i<<",ty"<<i<<",tz"<<i<<")'*def(v))           \n";

if(spc==2)
for(int i=0; i<dirichletconditions; i++)
write
<<"                                                                                                \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"    //  $\\forall x\\in\\partial\\Omega_D u=ug: ug\\to\\mathbb R$                               \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"     + on( Dlabel["<<int(i)<<"],                                                                \n"
<<"             u  = Dvalue["<<int(i+1*i)<<"],                                                     \n"
<<"             u1 = Dvalue["<<int((i+1*i)+1)<<"]                                                  \n"
<<"         )                                                                                      \n"
<<"                                                                                                \n";

if(spc==3)
for(int i=0; i<dirichletconditions; i++)
write
<<"                                                                                                \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"    //  $\\forall x\\in\\partial\\Omega_D u=ug: ug\\to\\mathbb R$                               \n"
<<"    //--------------------------------------------------------------------------                \n"
<<"     + on(Dlabel["<<int(i)<<"],                                                                 \n"
<<"             u  = Dvalue["<<int(i+2*i)<<"],                                                     \n"
<<"             u1 = Dvalue["<<int((i+2*i)+1)<<"],                                                 \n"
<<"             u2 = Dvalue["<<int((i+2*i)+2)<<"]                                                  \n"
<<"         )                                                                                      \n"
<<"                                                                                                \n";


write
<<";                                                                                               \n"
<<"                                                                                                \n";
