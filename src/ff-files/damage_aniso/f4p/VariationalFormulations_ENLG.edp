/*****************************************************************************

         This file is a part of PSD (Parallel Structural Dynamics)

     -------------------------------------------------------------------

     Author(s): Breno Ribeiro Nogueira
     Email    : bribeiro@ens-paris-saclay.fr
     Date     : 2023‑04‑04

     -------------------------------------------------------------------

     PSD a parallel  finite  element framework  provides tools to  solve
     multiple  solid-dynamic  problems; PSD is distributed  in  the hope
     that it will be useful, but WITHOUT ANY WARRANTY; or  without  even
     the implied warranty of  FITNESS  FOR  A  PARTICULAR  PURPOSE.

*******************************************************************************/   




//==============================================================================
// -------Variation formulation nonlocal gradient damage (Staggered)-------
//==============================================================================

 //-----------------------------
 // Eq. 1 Linear momentum     //
 //-----------------------------


 varf elast(def2(u),def2(v)) =

    //--------------------------------------------------------------------------
    // $+int_{\Omega}(\epsilon(u):\mathbb{\tilde{E}}:\epsilon(v))$
    //--------------------------------------------------------------------------

                        
       intN(Th,qforder=3,51)(                                                                       
                       (epsilonXMt(u,Mt)'*epsilon(v))*thickness                                           
                     )    
         


;

//-----------------------------
 // Eq. 2 Helmothz-like equation //
 //-----------------------------
varf endo(epsnl,q) =
  
 
    //--------------------------------------------------------------------------
    //-----------------------------  ENLG  -------------------------------------
    // $+\int_{\Omega} c \det{\mathbf{H}} (\mathbf{H}^{-2} \cdot \nabla \epsnl) \cdot \nabla q  +
    // \det{\mathbf{H}} \epsnl q $
    // Look at FemParameters.edp to see the definitions of Isv variables
    //--------------------------------------------------------------------------

      //ENLG anisotropic
      intN(Th,qforder=3,51)(
                thickness*(c*detHold*(iH2gradnl(epsnl,Isv8old,Isv9old,Isv11old/SQ2)'*grad(q))) +
      			    thickness*(epsnl*q*detHold)		  
                       )
                       

    //--------------------------------------------------------------------------
    //-----------------------------  ENLG  -------------------------------------
    // $+\int_{\Omega} \det{\mathbf{H}} \epseq q$     WHY PLUS NOT MINUS
    //--------------------------------------------------------------------------
	
	//ENLG anisotropic
	+ intN(Th,qforder=3,51)(thickness*eqStrain*q*detHold)
  ;

	   
      // Stress-based Vandoren and Simone 2018 (equivalent stress)
      //intN(Th,qforder=3)(
      //          thickness*((stressgradnl(epsnl,sig11,sig22,sig12,maxsp,s,c)'*grad(q))) +
      //			    thickness*( epsnl*q )			  
      //                 )
     
      // Stress-based Vandoren and Simone 2018 (principal stress)
      //intN(Th,qforder=3)(
      //          thickness*((stressgradnlnormal(epsnl,sig11,sig22,sig12,maxsp,s,c,E,kappa0)'*grad(q))) +
      //			    thickness*( epsnl*q )
      //                 )
      
      // Eikonal stress-damage-based sigprinc
/*      intN(Th,qforder=3)(*/
/*               thickness*((1-damagep)*(stressgradnlnormal(epsnl,sig11,sig22,sig12,maxsp,s,c,E,kappa0)'*grad(q))) +*/
/*      			    thickness*( epsnl*q )*/
/*                       )*/
/*                       */
	

 

//==============================================================================
// -------Variation formulation for calculating force -------
//==============================================================================

varf varfForce(def2(u),def2(v)) =

    //--------------------------------------------------------------------------
    // $+int_{\Omega}(\epsilon(u):\mathbb(\tilde{E}):\epsilon(v)))$
    //--------------------------------------------------------------------------
      
      intN(Th,qforder=3)(                                                                       
                       (epsilonXMt(u,Mt)'*epsilon(v))*thickness                                           
                     )

                        
;
