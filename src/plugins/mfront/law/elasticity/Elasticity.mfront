@Behaviour Elasticity;
@Author Mohd Afeef Badri;
@Date 17/18/2021;
@Description{
 Linear Elasticity with stifness 
 matrix calculation
}

/*!
 * First we define the two material properties as parameters
 * i.e, we assume these are constant for the material.
 *
 * The two material paramerts (real numbers) are simply the 
 * Youngs modulus and Poisson ratio of the material
 */
// Material properties
@MaterialProperty stress young;
young.setGlossaryName("YoungModulus");
@MaterialProperty real   nu;
nu.setGlossaryName("PoissonRatio");


/*!
 * We request Mfront to calculate the SymmetricTangentOperator
 * which is nothing but the stifness matrix
 */
@ProvidesSymmetricTangentOperator;


/*!
 * In this block the law is integrated
 *   1. compute the Lame parameters lambda, mu
 *   2. compute the stress state
 *   2. compute the stifness matrix 
 */
@Integrator{
  static_cast<void>(smt); // remove compiler warning
  const stress lambda = computeLambda(young,nu);
  const stress mu     = computeMu(young,nu);
  sig = lambda*trace(eto+deto)*StrainStensor::Id()+2*mu*(eto+deto);
  if(computeTangentOperator_){
    Dt = lambda*Stensor4::IxI()+2*mu*Stensor4::Id();
  }
}
