//=====================================================================================
// ------ Building the PostProcessor.edp file ------ 
//=====================================================================================

if(!nonlinear)if(!dynamic)if(plotAll){
ofstream  writePostProcessor("PostProcessor.edp");

writePostProcessor
<<"										   \n"
<<"/**************Variational formulation, solving, & post-proc *******************\n"
<<"*                                                                              *\n"
<<"* Note!!! This file is  generated  by running SolverGenerator.edp. Do not edit *\n"
<<"*         in order to  control this  file please change flag arguments of  the *\n"
<<"*         SolverGenerator, details of which are present in SolverGenerator.edp *\n"
<<"*         or in the README.MD file.                                            *\n"
<<"*                                                                              *\n"
<<"*******************************************************************************/\n"
<<"										   \n"
<<"										   \n";

if(!Sequential)if(soildynamics)writePostProcessor
<<"  if(mpirank==0)								   \n"
<<"     system(\"mv  VTUs/  VTUs_`date '+%b-%d-%Y-%H:%M'`\");  			   \n"; 


if(!Sequential)if(!soildynamics){writePostProcessor
<<"										   \n"        
<<"//==============================================================================\n"
<<"// -------Plotting with paraview-------//					   \n"
<<"//==============================================================================\n"
<<"										   \n"
<<(timelog ? "	MPItimerbegin(\"Paraview Plotting\",t0)\n" : " "       		    )
<<" 	int[int] vtuorder=[1,1,1];			// Solution export order   \n" 
<<"	string   namevtu=\"VTUs/Solution\";		// Name of PV files	   \n"
<<"	string   namedata=\"U\";			// Name of export data	   \n"
<<"	bool     withsur=true;				// Export surface mesh	   \n";
  
if(spc==2)writePostProcessor
<<"										   \n"
<<"     exportpvd(namevtu, Th,[u,u1,0], vtuorder, withsur, namedata, mpiCommWorld);\n"; 

if(spc==3)writePostProcessor
<<"										   \n"
<<"     exportpvd(namevtu, Th,[u,u1,u2], vtuorder, withsur,namedata, mpiCommWorld);\n";    
  
writePostProcessor       
<<"										   \n"        
<<(timelog  ? "	MPItimerend(\"Paraview Plotting\",t0)\n" : " "       		    )
<<(timelog ? "	MPItimerend(\"Solver\",t1)\n" : " "  	         	  	    )
<<"										   \n";
}  //-- [if loop terminator] !Sequential ended --//

if(Sequential)if(!soildynamics){writePostProcessor
<<"										   \n"	
<<"//==============================================================================\n"
<<"// -------Plotting with paraview-------					   \n"
<<"//==============================================================================\n"
<<"										   \n"
<<(timelog ? "	timerbegin(\"Post-Processing\",t0)\n" : " "  	    		   )
<<"  int[int] vtuorder=[1,1,1];				// Solution export order   \n"; 
  
if(spc==2)writePostProcessor
<<"  savevtk( \"VTUs/Solution-Seq.vtu\"	,					   \n"
<<"            Th			,					   \n"
<<"            [u,u1,0]			,					   \n";
 
if(spc==3)writePostProcessor     
<<"  savevtk(\"VTUs/Solution-Seq.vtu\"	,			  		   \n"
<<"            Th			,					   \n"
<<"            [u,u1,u2]		,					   \n"; 
  
writePostProcessor       
<<"             order=vtuorder		,					   \n"
<<"             dataname=\"U\"							   \n"
<<"         );				   			 		   \n"
<<(timelog ? "	timerend  (\"Post-Processing\",t0)\n" : " "  	    		    )
<<(timelog ? "	timerend  (\"Solver\",t1)\n" : " "  	         	  	    )	
<<"										   \n";
}  //-- [if loop terminator] Sequential ended --//

} //-- [ostream terminator]  varfmatsolve.edp closed --//
